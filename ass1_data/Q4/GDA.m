%initialisationclc; clear;%load dataX = load('q4x.dat');y = importdata('q4y.dat'); %for reading the text file as import data reads file in any formatm = length(y);Y = zeros(m,1);   %numeric label values for i = 1:length(y)  if y{i} == 'Alaska'    Y(i,1) = 1;  endend%////// plotting the dataX0 = [];Y0 = [];X1 = [];Y1 = [];for i = 1:m  if Y(i,1) == 1    X1 = [X1 ; X(i,:)];    Y1 = [Y1 ; Y(i)];  else    X0 = [X0 ; X(i,:)];    Y0 = [Y0 ; Y(i)];  end  endscatter(X1(:,1),X1(:,2),'r','*')hold on;scatter(X0(:,1),X0(:,2),'filled')% /// maximum likelihood estimation of parameters phi,mean0,mean1,covariencemean1 = mean(X1);mean0 = mean(X0);dev1 = X1.-mean1;dev0 = X0.-mean0;dev = [dev1;dev0];cov = dev'*dev/m; %covarience of the complete datacov1 = dev1'*dev1/length(dev1); %covarience of data with label y = 1cov0 = dev0'*dev0/length(dev0); %covarience of data with label y = 0phi = mean(Y); mean1 = mean1';mean0 = mean0';mean1,mean0,cov1,cov0,cov,phi%/////  linear decision boundary%cov1 = cov0 = cov%p(x|y=1) = p(x|y=0)%  X'*delta1 + delta1'*X = constantdelta1 = inv(cov)*mean1-inv(cov)*mean0;constant = mean1'*inv(cov)*mean1 - mean0'*inv(cov)*mean0;plot(X(:,1),(1/(2*delta1(2,1))*(constant - (2*delta1(1,1))*X(:,1))))%//////// quadratic decision boundary% cov0 != cov1 != cov% X'*par0*X - X'*par1 - par1'*X = constant2constant2 = mean0'*inv(cov0)*mean0 - mean1'*inv(cov1)*mean1 - log (det(cov1)/det(cov0));par0 = inv(cov1)-inv(cov0);par1 = inv(cov1)*mean1- inv(cov0)*mean0;% X2*(par0(2,2)*X2 + var2) = var1%var2 = X1*(par0(2,1) + par0(1,2)) - 2*par1(2,1)%var1 = constant2 - par0(1,1)*X1^2 + 2*par1(1,1)*X1var1 = constant2 - par0(1,1).*X(:,1).^2 + (2*par1(1,1)).*X(:,1);var2 = X(:,1).*(par0(2,1)+par0(1,2)) .- 2*(par1(2,1));X2new = sqrt(var1./(par0(2,2)) +  (var2./(2*(par0(2,2)))).^2) .- var2./(2*(par0(2,2)));scatter(X(:,1), X2new,'g','+')grid on;legend('y(i) = Alaska','y(i) = Canada','linear decision boundary','quadratic decision boundary')xlabel('fresh water');ylabel('marine water');