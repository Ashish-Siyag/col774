%initialisationclc;clear;%load the dataX =load('logisticX.csv');Y = load('logisticY.csv');m = length(Y);X = [ones(m,1) X]; %intercept term% ////// value of parametersdisplay('gradient asscent ')[theta,itr] = Gasscent(X,Y) %implemented gradient asscent till convergence for optimum value of parametersdisplay('newton method')[theta1,itr] = newton(X,Y) %implemented newton method convergence for parameters% /////plotting data pointsx1 = [];y1 = [];  x0 = [];y0 = [];%seperation of points with different labelsfor i = 1:m  if Y(i) == 1    x1 = [x1 ;X(i,:)];    y1 = [y1 ;Y(i,:)];  else    x0 = [x0 ;X(i,:)];    y0 = [y0 ;Y(i,:)];  endendscatter(x1(:,2),x1(:,3),'filled')hold on;scatter(x0(:,2),x0(:,3),'r','*')%////////decision boundary% P(y=1|x) = 0.5 ; g(X*theta) = 0.5; X*theta = 0 ; theta(1)+theta(2)*X2+theta(3)*X3 = 0%gradient asscent equation of decision boundaryplot(X(:,2),(1/theta(3))*(-theta(1)-theta(2).*X(:,2)))xlabel('X1'); ylabel('X2')%newton's method equation of decision boundaryplot(X(:,2),(1/theta1(3))*(-theta1(1)-theta1(2).*X(:,2)),'g')legend('y(i) = 1','y(i) = 0','Decision Boundary(gradient asscent)','Decision Boundary(Newton method)');hold off;